{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web\\\\codemasters-dashboard\\\\src\\\\pages\\\\student\\\\components\\\\ModalFormStudent.js\",\n  _s = $RefreshSig$();\nimport { Flex, Input } from '@chakra-ui/react';\nimport dayjs from 'dayjs';\nimport { useEffect, useState } from 'react';\nimport FormInput from '../../../components/FormInput';\nimport Modal from '../../../components/Modal';\nimport { useStudent } from '../../../services';\nimport { useCustomToast } from '../../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  email: '',\n  phoneNumber: '',\n  enrollNumber: '',\n  admissionDate: '',\n  imageUrl: ''\n};\nfunction ModalFormStudent({\n  data,\n  onClose,\n  isOpen,\n  refresh\n}) {\n  _s();\n  const {\n    showToastError,\n    showToastSuccess\n  } = useCustomToast();\n  const {\n    addStudent,\n    updateStudent\n  } = useStudent();\n  const [form, setForm] = useState(initialState);\n  const [image, setImage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (data) {\n      setForm({\n        ...data\n      });\n    } else {\n      setForm(initialState);\n    }\n  }, [isOpen]);\n  const handleChange = e => {\n    if (e.target.name === 'image') {\n      console.log('image set', e.target.files[0]);\n      return setImage(e.target.files[0]);\n      // setForm({\n      //   ...form,\n      //   imageUrl: e.target.files[0]\n      // })\n    }\n\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAdd = async () => {\n    setIsLoading(true);\n    try {\n      const formData = new FormData();\n      // Object.entries(form).forEach(([key, value]) => {\n      //   console.log('key dan value',key, value);\n      //   formData.append(key, value)\n      // })\n\n      formData.append('name', form.name);\n      formData.append('email', form.email);\n      formData.append('phoneNumber', form.phoneNumber);\n      formData.append('enrollNumber', form.enrollNumber);\n      formData.append('admissionDate', form.admissionDate);\n      formData.append('image', image);\n      console.log('formdata', formData);\n      console.log('image', form.imageUrl);\n      const res = await addStudent(formData);\n      showToastSuccess(res === null || res === void 0 ? void 0 : res.message);\n      onClose();\n      refresh();\n    } catch (e) {\n      showToastError(e);\n    }\n    setIsLoading(false);\n  };\n  const handleUpdate = async () => {\n    setIsLoading(true);\n    try {\n      const formData = new FormData();\n      Object.entries(form).forEach(([key, value]) => {\n        formData.append(key, value);\n      });\n      const res = await updateStudent(data === null || data === void 0 ? void 0 : data.id, {\n        ...form,\n        admissionDate: dayjs(form.admissionDate).format('YYYY-MM-DD')\n      });\n      showToastSuccess(res === null || res === void 0 ? void 0 : res.message);\n      onClose();\n      refresh();\n    } catch (e) {\n      showToastError(e);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    onConfirm: data ? handleUpdate : handleAdd,\n    title: `${data ? 'Edit' : 'Add'} Data`,\n    confirmButtonText: \"Save\",\n    isButtonLoading: isLoading,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      gap: \"16px\",\n      direction: 'column',\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"name\",\n        value: form.name,\n        onChange: handleChange,\n        label: \"Name\",\n        placeholder: \"Karthi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        value: form.email,\n        onChange: handleChange,\n        label: \"Email\",\n        placeholder: \"karthi@gmail.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"phoneNumber\",\n        value: form.phoneNumber,\n        onChange: handleChange,\n        label: \"Phone\",\n        placeholder: \"085XXX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"enrollNumber\",\n        value: form.enrollNumber,\n        onChange: handleChange,\n        label: \"Enroll Number\",\n        placeholder: \"123456\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"date\",\n        name: \"admissionDate\",\n        value: form.admissionDate,\n        onChange: handleChange,\n        label: \"Date of Admission\",\n        placeholder: \"2023-12-31\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"file\",\n        name: \"image\"\n        // value={image}\n        // value={form.imageUrl}\n        ,\n        onChange: handleChange,\n        label: \"Image\",\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(ModalFormStudent, \"6thHphbzMo/+vhCSQw/nfW99kG4=\", false, function () {\n  return [useCustomToast, useStudent];\n});\n_c = ModalFormStudent;\nexport default ModalFormStudent;\nvar _c;\n$RefreshReg$(_c, \"ModalFormStudent\");","map":{"version":3,"names":["Flex","Input","dayjs","useEffect","useState","FormInput","Modal","useStudent","useCustomToast","jsxDEV","_jsxDEV","initialState","name","email","phoneNumber","enrollNumber","admissionDate","imageUrl","ModalFormStudent","data","onClose","isOpen","refresh","_s","showToastError","showToastSuccess","addStudent","updateStudent","form","setForm","image","setImage","isLoading","setIsLoading","handleChange","e","target","console","log","files","value","handleAdd","formData","FormData","append","res","message","handleUpdate","Object","entries","forEach","key","id","format","onConfirm","title","confirmButtonText","isButtonLoading","children","gap","direction","onChange","label","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","_c","$RefreshReg$"],"sources":["E:/Web/codemasters-dashboard/src/pages/student/components/ModalFormStudent.js"],"sourcesContent":["import { Flex, Input } from '@chakra-ui/react';\r\nimport dayjs from 'dayjs';\r\nimport { useEffect, useState } from 'react';\r\nimport FormInput from '../../../components/FormInput';\r\nimport Modal from '../../../components/Modal';\r\nimport { useStudent } from '../../../services';\r\nimport { useCustomToast } from '../../../utils';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  email: '',\r\n  phoneNumber: '',\r\n  enrollNumber: '',\r\n  admissionDate: '',\r\n  imageUrl: '',\r\n};\r\n\r\nfunction ModalFormStudent({ data, onClose, isOpen, refresh }) {\r\n  const { showToastError, showToastSuccess } = useCustomToast();\r\n  const { addStudent, updateStudent } = useStudent();\r\n  const [form, setForm] = useState(initialState);\r\n  const [image, setImage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setForm({ ...data });\r\n    } else {\r\n      setForm(initialState);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleChange = e => {\r\n    if(e.target.name === 'image') {\r\n      console.log('image set', e.target.files[0]);\r\n      return setImage(e.target.files[0]);\r\n      // setForm({\r\n      //   ...form,\r\n      //   imageUrl: e.target.files[0]\r\n      // })\r\n    }\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAdd = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      // Object.entries(form).forEach(([key, value]) => {\r\n      //   console.log('key dan value',key, value);\r\n      //   formData.append(key, value)\r\n      // })\r\n      \r\n      formData.append('name', form.name)\r\n      formData.append('email', form.email)\r\n      formData.append('phoneNumber', form.phoneNumber)\r\n      formData.append('enrollNumber', form.enrollNumber)\r\n      formData.append('admissionDate', form.admissionDate)\r\n      formData.append('image', image)\r\n      console.log('formdata',formData)\r\n      console.log('image', form.imageUrl);\r\n\r\n      const res = await addStudent(formData);\r\n      showToastSuccess(res?.message);\r\n      onClose();\r\n      refresh();\r\n    } catch (e) {\r\n      showToastError(e);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      Object.entries(form).forEach(([key, value]) => {\r\n        formData.append(key, value);\r\n      });\r\n\r\n      const res = await updateStudent(data?.id, {\r\n        ...form,\r\n        admissionDate: dayjs(form.admissionDate).format('YYYY-MM-DD'),\r\n      });\r\n      showToastSuccess(res?.message);\r\n      onClose();\r\n      refresh();\r\n    } catch (e) {\r\n      showToastError(e);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onConfirm={data ? handleUpdate : handleAdd}\r\n      title={`${data ? 'Edit' : 'Add'} Data`}\r\n      confirmButtonText=\"Save\"\r\n      isButtonLoading={isLoading}\r\n    >\r\n      <Flex gap=\"16px\" direction={'column'}>\r\n        <FormInput\r\n          name=\"name\"\r\n          value={form.name}\r\n          onChange={handleChange}\r\n          label=\"Name\"\r\n          placeholder=\"Karthi\"\r\n        />\r\n        <FormInput\r\n          name=\"email\"\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          label=\"Email\"\r\n          placeholder=\"karthi@gmail.com\"\r\n        />\r\n        <FormInput\r\n          name=\"phoneNumber\"\r\n          value={form.phoneNumber}\r\n          onChange={handleChange}\r\n          label=\"Phone\"\r\n          placeholder=\"085XXX\"\r\n        />\r\n        <FormInput\r\n          name=\"enrollNumber\"\r\n          value={form.enrollNumber}\r\n          onChange={handleChange}\r\n          label=\"Enroll Number\"\r\n          placeholder=\"123456\"\r\n        />\r\n        <FormInput\r\n          type=\"date\"\r\n          name=\"admissionDate\"\r\n          value={form.admissionDate}\r\n          onChange={handleChange}\r\n          label=\"Date of Admission\"\r\n          placeholder=\"2023-12-31\"\r\n        />\r\n        <FormInput\r\n          type=\"file\"\r\n          name=\"image\"\r\n          // value={image}\r\n          // value={form.imageUrl}\r\n          onChange={handleChange}\r\n          label=\"Image\"\r\n          accept=\"image/*\"\r\n        />\r\n        {/* <Input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          onChange={handleChange}\r\n          value={form.imageUrl}\r\n          aria-hidden={true}\r\n          isDisabled={data ? true : false}\r\n        /> */}\r\n      </Flex>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalFormStudent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}